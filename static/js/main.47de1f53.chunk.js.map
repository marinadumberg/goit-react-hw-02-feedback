{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOption.module.css","components/Section/Section.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","btns","Object","keys","className","s","map","btn","index","type","onClick","Statistics","good","neutral","bad","total","positiveFeedPercentage","feed","feedType","Section","title","children","section","Notification","message","Feedback","state","btnIncrement","evt","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","Component","App","ReactDOM","render","document","querySelector","module","exports"],"mappings":"2OAuBeA,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GAEzB,OACE,qBAAKK,UAAWC,IAAEJ,KAAlB,SACGA,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,wBACEJ,UAAWC,IAAEE,IAEbE,KAAK,SACLC,QAAS,kBAAMV,EAAgBO,IAJjC,SAMGA,GAJIC,S,gBCeAG,EAxBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,uBAA9B,OACjB,sBAAKZ,UAAWC,IAAEY,KAAlB,UACE,uBAAMb,UAAWC,IAAEa,SAAnB,mBAAoCN,KAEpC,uBAAMR,UAAWC,IAAEa,SAAnB,uBAAwCL,KAExC,uBAAMT,UAAWC,IAAEa,SAAnB,mBAAoCJ,KAEpC,uBAAMV,UAAWC,IAAEa,SAAnB,qBAAsCH,KAEtC,uBAAMX,UAAWC,IAAEa,SAAnB,gCACsBN,EAAO,EAAII,EAAyB,IAD1D,W,gBCFWG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASjB,UAAWC,IAAEiB,QAAtB,UACE,oBAAIlB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,MCDQE,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC2DEC,E,4MAvDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,aAAe,SAAAC,GACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAME,EAAUF,GAAO,O,EAK9BG,mBAAqB,SAACnB,EAAMC,EAASC,GAAhB,OAAwBF,EAAOC,EAAUC,G,EAE9DkB,gCAAkC,SAACpB,EAAMC,EAASC,GAAhB,OAChCmB,KAAKC,MAAc,IAAPtB,EAAc,EAAKmB,mBAAmBnB,EAAMC,EAASC,K,4CAEnE,WACE,MAA+BqB,KAAKT,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBD,KAAKJ,mBAAmBnB,EAAME,EAAKD,GACnDG,EAAyBmB,KAAKH,gCAClCpB,EACAC,EACAC,GAGF,OACE,gCACE,cAAC,EAAD,CAASM,MAAM,6BAAf,SACE,cAAC,EAAD,CACErB,QAASoC,KAAKT,MACd1B,gBAAiBmC,KAAKR,iBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGgB,EAAgB,EACf,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,uBAAwBA,IAG1B,cAAC,EAAD,CAAcQ,QAAQ,+B,GAhDXa,aCIRC,EANH,WACZ,OAAO,cAAC,EAAD,KCDPC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,W,kBCH/CC,EAAOC,QAAU,CAAC,SAAW,6BAA6B,KAAO,2B,kBCAjED,EAAOC,QAAU,CAAC,KAAO,6BAA6B,IAAM,8B,kBCA5DD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.47de1f53.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOption.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const btns = Object.keys(options);\n  \n  return (\n    <div className={s.btns}>\n      {btns.map((btn, index) => (\n        <button\n          className={s.btn}\n          key={index}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(btn)}\n        >\n          {btn}\n        </button>\n      ))}\n    </div>\n  );\n};\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedPercentage }) => (\n  <div className={s.feed}>\n    <span className={s.feedType}>Good: {good}</span>\n\n    <span className={s.feedType}> Neutral: {neutral}</span>\n\n    <span className={s.feedType}> Bad: {bad}</span>\n\n    <span className={s.feedType}> Total: {total}</span>\n\n    <span className={s.feedType}>\n      Positive feedback: {good > 0 ? positiveFeedPercentage : '0'}%\n    </span>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedPercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Section from './Section';\nimport Notification from './Notification';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  btnIncrement = evt => {\n    this.setState(prevState => {\n      return {\n        [evt]: prevState[evt] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = (good, neutral, bad) => good + neutral + bad;\n\n  countPositiveFeedbackPercentage = (good, neutral, bad) =>\n    Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback(good, bad, neutral);\n    const positiveFeedPercentage = this.countPositiveFeedbackPercentage(\n      good,\n      neutral,\n      bad,\n    );\n\n    return (\n      <div>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.btnIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statictics\">\n          {totalFeedback > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positiveFeedPercentage={positiveFeedPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;","import React from 'react';\n\nimport Feedback from './components/Feedback';\n\nconst App = () => {\nreturn(<Feedback/>)\n\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedType\":\"Statistics_feedType__36sP_\",\"feed\":\"Statistics_feed__Csvpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"FeedbackOption_btns__1h_8s\",\"btn\":\"FeedbackOption_btn__2a1mZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradient\":\"Section_gradient__2ujiD\",\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};"],"sourceRoot":""}